<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        activiti.cfg.xml
            包括：ProcessEngineConfiguration 的定义、数据源定义、事务管理器等，此文件其实就是一个 spring 配置文件。

            通过 ProcessEngineConfiguration 可以创建工作流引擎 ProceccEngine，常用的两种方法如下：
                通过 org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration
                Activiti 可以单独运行，使用它创建的 ProcessEngine，Activiti 会自己处理事务。
    -->

    <!--数据源配置dbcp-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/activiti?useUnicode=true&amp;characterEncoding=utf8&amp;nullCatalogMeansCurrent=true&amp;useSSL=false&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
    </bean>

    <!--
        通过 ProcessEngineConfiguration 可以创建工作流引擎 ProceccEngine，常用的两种方法如下：
                其一单独配置 activiti.xml文件：通过 org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration
                Activiti 可以单独运行，使用它创建的 ProcessEngine，Activiti 会自己处理事务。
        activiti 单独运行的 ProcessEngine 配置对象 (processEngineConfiguration),使用单独启动方式。
        默认情况下：bean 的 id=processEngineConfiguration
    -->
    <bean id="processEngineConfiguration" class="org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration">
        <!--代表数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--
            注意：在 activiti.cfg.xml 配置文件中的 dataSource 和 processEngineConfiguration 也可以使用一次性配置出来。
        -->
        <!--        <property name="jdbcDriver" value="com.mysql.jdbc.Driver"/>-->
        <!--        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/activiti"/>-->
        <!--        <property name="jdbcUsername" value="root"/>-->
        <!--        <property name="jdbcPassword" value="root"/>-->
        <!--
            关于 processEngineConfiguration 中的 databaseSchemaUpdate 参数，通过此参数设计 activiti 数据表的处理策略，参数如下：
                false（默认）：检查数据库表的版本和依赖库的版本， 如果版本不匹配就抛出异常。
                true: 构建流程引擎时，执行检查，如果需要就执行更新。 如果表不存在，就创建。
                create-drop: 构建流程引擎时创建数据库表， 关闭流程引擎时删除这些表。
                drop-create：先删除表再创建表。
                create: 构建流程引擎时创建数据库表， 关闭流程引擎时不删除这些表。
            代表是否生成表结构
        -->
        <property name="databaseSchemaUpdate" value="true"/>
    </bean>
</beans>